 {% block content %} 
  <div>
  <button class="modal-open bg-transparent border border-gray-500 hover:border-indigo-500 text-gray-500 hover:text-indigo-500 font-bold py-2 px-4 rounded">?</button>
  
  <div class="z-10 modal opacity-0 pointer-events-none fixed w-full h-full top-0 left-0 flex items-center justify-center">
    <div class="modal-overlay absolute w-full h-full bg-gray-900 opacity-50"></div>
    
    <div class="modal-container bg-white w-8/12 max-w-md mx-auto rounded shadow-lg z-50">

      <!-- Add margin if you want to see some of the overlay behind the modal-->
      <div class="modal-content py-4 text-left px-6">

        <div class="slideshow-container">

  <!-- Full-width images with number and caption text -->
  <div class="mySlides fade">
 
  <img class="rounded m-auto" src="{{ url_for('static', filename='src/img/tutorial_carousel_1.png') }}" style="max-width: 100%;max-height: 200px; min-height: 200px; position: relative">
  
    <p class="text-xl md:text-2xl font-bold">Input</p>
    
          <p class="text-sm md:text-base">
            Visit your client's social media profile or a recent conversation you had with them. Copy a chunk of the text
            and insert it into the box "Input Text". 
            <br>
            <br>
            Repeat this 5 times so our AI can gather enough information about your client.
          </p>
          <p class="align_arrows text-2xl font-bold text-center">1 / 3</p>
  </div>

  <div class="mySlides fade">
  <img class="m-auto rounded" src="{{ url_for('static', filename='src/img/tutorial_carousel_2.jpeg') }}" style="max-width: 100%;max-height: 200px; min-height: 200px; position: relative">
      <p class="text-xl md:text-2xl font-bold">Discover</p>
          <p class="text-sm md:text-base">
            With the information provided, the AI tool will uncover your client's decision-making process
            and psychology. 
            <br>
            <br>
            The chart on the right will present an overview of your client's profile.
          </p>
  
    <p class="align_arrows text-2xl font-bold text-center">2 / 3</p>

  </div>

  <div class="mySlides fade">
  <img class="rounded m-auto" src="{{ url_for('static', filename='src/img/tutorial_carousel_3.jpeg') }}" style="max-width: 100%;max-height: 200px; min-height: 200px; position: relative">
      <p class="text-xl md:text-2xl font-bold ">Engage</p>
          <p class="text-sm md:text-base">
            Revolutionise the way you sell and tap into your client's subconscious.
            <br>
            <br>
            We will equip you with customised sales techniques that will allow you to boost sales and 
            stop playing the numbers game.
          </p>
      
    <p class="align_arrows text-2xl font-bold text-center">3 / 3</p>
  </div>

  <div class="">
  <!-- Next and previous buttons -->
  <a class="prev text-2xl" onclick="plusSlides(-1)">&#10094;</a>
  <a class="next text-2xl" onclick="plusSlides(1)">&#10095;</a>
  </div>
</div>

<!-- The dots/circles -->
<div style="text-align:center" class="pb-6">
  <span class="dot" onclick="currentSlide(1)"></span>
  <span class="dot" onclick="currentSlide(2)"></span>
  <span class="dot" onclick="currentSlide(3)"></span>
</div>

        <!--Footer-->
        {# <div class="flex justify-end pt-2">
          <button class="modal-close px-4 bg-black p-3 rounded-lg text-white hover:bg-black-400">Close</button>
        </div> #}
        
      </div>
  </div>
</div>
</div>
{% endblock %} 

{% block additionalscripts %}
  <script>
    var openmodal = document.querySelectorAll('.modal-open')
    for (var i = 0; i < openmodal.length; i++) {
      openmodal[i].addEventListener('click', function(event){
    	event.preventDefault()
    	toggleModal()
      })
    }
    
    const overlay = document.querySelector('.modal-overlay')
    overlay.addEventListener('click', toggleModal)
    
    var closemodal = document.querySelectorAll('.modal-close')
    for (var i = 0; i < closemodal.length; i++) {
      closemodal[i].addEventListener('click', toggleModal)
    }
    
    document.onkeydown = function(evt) {
      evt = evt || window.event
      var isEscape = false
      if ("key" in evt) {
    	isEscape = (evt.key === "Escape" || evt.key === "Esc")
      } else {
    	isEscape = (evt.keyCode === 27)
      }
      if (isEscape && document.body.classList.contains('modal-active')) {
    	toggleModal()
      }
    };
    
    function toggleModal () {
      const body = document.querySelector('body')
      const modal = document.querySelector('.modal')
      modal.classList.toggle('opacity-0')
      modal.classList.toggle('pointer-events-none')
      body.classList.toggle('modal-active')
    }

    var slideIndex = 1;
showSlides(slideIndex);

// Next/previous controls
function plusSlides(n) {
  showSlides(slideIndex += n);
}

// Thumbnail image controls
function currentSlide(n) {
  showSlides(slideIndex = n);
}

function showSlides(n) {
  var i;
  var slides = document.getElementsByClassName("mySlides");
  var dots = document.getElementsByClassName("dot");
  if (n > slides.length) {slideIndex = 1}
  if (n < 1) {slideIndex = slides.length}
  for (i = 0; i < slides.length; i++) {
      slides[i].style.display = "none";
  }
  for (i = 0; i < dots.length; i++) {
      dots[i].className = dots[i].className.replace(" active", "");
  }
  slides[slideIndex-1].style.display = "block";
  dots[slideIndex-1].className += " active";
}
     
  </script>

{% endblock %}

<style type="text/css">
* {box-sizing:border-box}

/* Slideshow container */
.slideshow-container {
  max-width: 1000px;
  position: relative;
  margin: auto;
  height: 500px;
}

.image-container {
  {# max-width: 1000px;
  position: relative;
  margin: auto;
  height: 500px; #}
}

/* Hide the images by default */
.mySlides {
  display: none;
}

/* Next & previous buttons */
.prev, .next {
  cursor: pointer;
  position: absolute;
  top: 86%;
  width: auto;
  padding: 8px;
  color: black;
  font-weight: bold;
  font-size: 24px;
  transition: 0.6s ease;
  border-radius: 0 3px 3px 0;
  user-select: none;
}

/* Position the "next button" to the right */
.next {
  right: 0;
  border-radius: 3px 0 0 3px;
}

/* On hover, add a black background color with a little bit see-through */
.prev:hover, .next:hover {
  background-color: rgba(0,0,0,0.8);
}

/* The dots/bullets/indicators */
.dot {
  cursor: pointer;
  height: 15px;
  width: 15px;
  margin: 0 2px;
  background-color: #bbb;
  border-radius: 50%;
  display: inline-block;
  transition: background-color 0.6s ease;
}

.active, .dot:hover {
  background-color: #717171;
}

/* Fading animation */
.fade {
  -webkit-animation-name: fade;
  -webkit-animation-duration: 1.5s;
  animation-name: fade;
  animation-duration: 1.5s;
}

.align_arrows {
  position: absolute;
  top: 88%;
  left: 44%;
}

@-webkit-keyframes fade {
  from {opacity: .4}
  to {opacity: 1}
}

@keyframes fade {
  from {opacity: .4}
  to {opacity: 1}
}

</style>

